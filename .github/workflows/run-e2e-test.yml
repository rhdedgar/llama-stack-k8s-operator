name: Run E2E Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '1.21'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Create kind config
        run: |
          cat > kind-config.yaml << EOF
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          containerdConfigPatches:
          - |-
            [plugins."io.containerd.grpc.v1.cri".registry]
              config_path = "/etc/containerd/certs.d"
          nodes:
          - role: control-plane
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  system-reserved: memory=500Mi
                  eviction-hard: memory.available<200Mi
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP
          EOF

      - name: Create k8s Kind Cluster
        id: kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          registry: true
          registry_name: kind-registry
          registry_port: 5000
          registry_enable_delete: true
          config: kind-config.yaml

      - name: Build operator image
        run: |
          # Build the image with a simpler tag format
          docker build -t kind-registry:5000/llama-stack-k8s-operator:pr${{ github.event.pull_request.number }} -f Dockerfile .

          # Tag the image for local registry
          docker tag kind-registry:5000/llama-stack-k8s-operator:pr${{ github.event.pull_request.number }} kind-registry:5000/llama-stack-k8s-operator:latest

      - name: Push operator image to local registry
        run: |
          docker push kind-registry:5000/llama-stack-k8s-operator:latest

      - name: Deploy operator
        run: |
          # Deploy the operator
          make deploy IMG=kind-registry:5000/llama-stack-k8s-operator:latest

          # Wait for operator deployment to be ready
          if ! kubectl wait --for=condition=available --timeout=300s deployment/llama-stack-k8s-operator-controller-manager -n llama-stack-k8s-operator-system; then
            echo "Deployment failed to become ready. Debugging information:"
            kubectl describe deployment llama-stack-k8s-operator-controller-manager -n llama-stack-k8s-operator-system
            kubectl logs -l control-plane=controller-manager -n llama-stack-k8s-operator-system --tail=100
            kubectl get events -n llama-stack-k8s-operator-system --sort-by='.lastTimestamp'
            exit 1
          fi

      - name: Generate certificates
        run: |
          ./config/samples/generate_certificates.sh

      - name: Create vllm-ca-certs secret
        run: |
          kubectl create secret generic vllm-ca-certs --from-file=./config/samples/vllm-ca-certs/

      - name: Deploy vLLM server for TLS testing
        run: |
          # Apply the Kubernetes-compatible vLLM deployment
          kubectl apply -f config/samples/vllm-k8s.yaml

          # Create vllm-certs secret in the vLLM namespace
          kubectl create secret generic vllm-certs --from-file=./config/samples/vllm-certs/ --namespace vllm-dist

          # Wait for vLLM deployment to be ready
          kubectl wait --for=condition=available --timeout=600s deployment/vllm-server --namespace vllm-dist

          # Wait for vLLM pods to be ready
          kubectl wait --for=condition=ready --timeout=600s pod -l app.kubernetes.io/name=vllm --namespace vllm-dist

      - name: Run e2e tests
        run: |
          make test-e2e

      - name: Get logs
        if: ${{ always() }}
        run: |
          kubectl -n llama-stack-test get all -o yaml > all.log
          kubectl -n llama-stack-k8s-operator-system logs deployment.apps/llama-stack-k8s-operator-controller-manager > controller-manager.log
          kubectl -n llama-stack-test describe all > all-describe.log
          kubectl -n llama-stack-test describe events > events.log
          kubectl get llamastackdistributions --all-namespaces -o yaml > llamastackdistributions.log
          # Get vLLM logs
          kubectl -n vllm-dist get all -o yaml > vllm-all.log
          kubectl -n vllm-dist logs deployment/vllm-server > vllm-server.log
          kubectl -n vllm-dist describe all > vllm-describe.log
          kubectl -n vllm-dist describe events > vllm-events.log

      - name: Upload all logs to artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: logs-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            *.log
          retention-days: 1
