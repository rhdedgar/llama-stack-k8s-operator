apiVersion: v1
kind: ConfigMap
metadata:
  name: llama-stack-config
data:
  run.yaml: |
    # Llama Stack Configuration
    version: '2'
    image_name: remote-vllm
    apis:
    - inference
    providers:
      inference:
      - provider_id: vllm
        provider_type: "remote::vllm"
        config:
          url: "https://vllm-server.vllm-dist.svc.cluster.local:8000/v1"
    models:
      - model_id: "meta-llama/Llama-3.2-1B-Instruct"
        provider_id: vllm
        model_type: llm
    server:
      port: 8321
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: odh-trusted-ca-bundle
  labels:
    config.openshift.io/inject-trusted-cabundle: "true"
data:
  ca-bundle.crt: |
    # This will be populated by the Cluster Network Operator (CNO)
    # with cluster-wide CA certificates
    -----BEGIN CERTIFICATE-----
    # ... cluster CA certificate data here ...
    -----END CERTIFICATE-----
  odh-ca-bundle.crt: |
    # Custom CA certificates specified by users in DSCInitialization
    -----BEGIN CERTIFICATE-----
    # ... custom CA certificate data here ...
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    # ... additional custom CA certificate data here ...
    -----END CERTIFICATE-----
---
apiVersion: llamastack.io/v1alpha1
kind: LlamaStackDistribution
metadata:
  name: llamastack-with-multiple-cas
spec:
  replicas: 1
  server:
    distribution:
      name: remote-vllm
    containerSpec:
      port: 8321
      env:
      - name: INFERENCE_MODEL
        value: "meta-llama/Llama-3.2-1B-Instruct"
      - name: VLLM_URL
        value: "https://vllm-server.vllm-dist.svc.cluster.local:8000/v1"
      - name: VLLM_TLS_VERIFY
        value: "/etc/ssl/certs/ca-bundle.crt"
    userConfig:
      configMapName: llama-stack-config
    tlsConfig:
      caBundle:
        configMapName: odh-trusted-ca-bundle
        # Use multiple keys to support RHOAI pattern
        configMapKeys: # these should match the data keys in the ConfigMap above
          - ca-bundle.crt      # CNO-injected cluster CAs
          - odh-ca-bundle.crt  # User-specified custom CAs
