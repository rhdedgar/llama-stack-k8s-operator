---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vllm-sa
  namespace: vllm-dist
---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: vllm-scc
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowHostNetwork: false
allowedCapabilities:
- NET_BIND_SERVICE
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
readOnlyRootFilesystem: false
requiredDropCapabilities:
- ALL
runAsUser:
  type: MustRunAs
  uid: 0
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: vllm-role
  namespace: vllm-dist
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - vllm-scc
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vllm-rolebinding
  namespace:  vllm-dist
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vllm-role
subjects:
- kind: ServiceAccount
  name: vllm-sa
  namespace: vllm-dist
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vllm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vllm
    spec:
      serviceAccountName: vllm-sa
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: vllm
        image: quay.io/dedgar/vllm:v0.0.1
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args: [
          "vllm serve ./root/.cache/huggingface/hub/models--meta-llama--Llama-3.2-1B-Instruct --ssl-keyfile /etc/ssl/certs/server.key --ssl-certfile /etc/ssl/certs/server.crt"
        ]
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-token-secret
              key: token
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-token-secret
              key: token
        - name: VLLM_CPU_KVCACHE_SPACE
          value: "10"
        ports:
          - containerPort: 8000
        securityContext:
          allowPrivilegeEscalation: true
          runAsNonRoot: false
        volumeMounts:
          - name: vllm-certs
            mountPath: /etc/ssl/certs
            readOnly: true
      volumes:
      - name: vllm-certs
        secret:
          secretName: vllm-certs
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-server
spec:
  selector:
    app.kubernetes.io/name: vllm
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP
